# -*- shell-script -*-

# test_crash.in - try various ways to end a life


_fsday1()
{
	st_mkfile -r. -d "$1" "/DISK_1/FILE" -Rs1K
}


# test_crash_setup:
#
test_crash_setup()
{
	# setup_fs
	st_setup_fs 1
	# create the config
	st_mkfile "/etc/mybackup/$ST_TEST_NAME/mybackup.conf" - <<EOF
{
  "mailto": "${ST_MAILTO:-}",
  "check_file": "$ST_ROOTDIR/fs/CHECK_FILE",
  "scripts": {
    "KILLER": {
      "prog": "./killer",
      "options": ["%(trigger)s"]
    }
  },
  "disks": {
    "DISK_1": {
      "path": "$ST_ROOTDIR/fs/DISK_1",
      "hooks": [{
        "script": "KILLER",
        "triggers": ".*",
        "options": []
      }]
    }
  }
}
EOF

	st_mkfile -m755 "/etc/mybackup/$ST_TEST_NAME/killer" - <<EOF
#!/bin/sh
trace() { echo "KILLER: \$*"; }
LOGFILE="$ST_ROOTDIR/tmp/killer.log"
exec >>"\$LOGFILE" 2>&1
#set -x
trace "======================================================================"
trace "TRIGGER='\${1}' TARGET='\$MB_TEST_CRASH_TRIGGER'"
test x"\$1" = x"\$MB_TEST_CRASH_TRIGGER" \
  || { trace "WRONG TRIGGER, BYE"; exit 0; }
KPID=\`ps -p\$\$ -oppid --no-headers\`
pstree -alps \$KPID
trace "KILLING PID \$KPID"
kill -KILL \$KPID || {
  trace "KILL FAILED! (\$?)";
  exit 1; }
sleep 5 # let it die
trace "** HEY, WHAT AM I DOING HERE? **"
exit 1
EOF
}


# test_crash_main:
#
test_crash_main()
{
	st_switch_date -d1 -h1
	st_switch_fsday 1
	# first make sure mbclean succeeds in a clean env
	st_mbclean $ST_TEST_NAME
	# first try without the check-file (should refuse to start)
	st_exec '!' mbdump -f $ST_TEST_NAME -n "[expect error: check_file not found]"
	st_exec mbclean $ST_TEST_NAME
	echo >"$ST_ROOTDIR/fs/CHECK_FILE"
	# this one should work
	st_switch_date -d1 -h2
	st_mbdump -f $ST_TEST_NAME
	# this must fail
	st_switch_date -d1 -h3
	st_exec '!' FOO='bar baz' MB_TEST_CRASH_TRIGGER='schedule' \
		mbdump -f $ST_TEST_NAME
	# make sure it won't run again (because the journal is still
	# present)
	st_switch_date -d1 -h4
	st_mbdump '!' -f $ST_TEST_NAME
	# mbclean should clean up the mess
	st_switch_date -d1 -h5
	st_mbclean $ST_TEST_NAME
	# so a new run will succeed
	st_switch_date -d1 -h6
	st_mbdump -f $ST_TEST_NAME
	# all done
	trace "OK"
}
