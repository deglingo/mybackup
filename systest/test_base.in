#!@SHELL@
# -*- shell-script -*-


# setup_fs:
#
setup_fs()
{
	local oldpwd=`pwd`
	local stage="$ST_RUNDIR/fs.stamp-h"
	local fsdir="$ST_RUNDIR/fs"
	test -e "$stage" -a "$stage" -nt "$ST_ARG0" \
		&& return || true
	trace "SETUP FS: $ST_RUNDIR ($ST_ARG0)"
	rm -rf "$fsdir"
	mkdir "$fsdir"
	# day 1
	local dir="$fsdir/d1" date=`st_fakedate -d1`
	st_mkdir -r "$fsdir" "/d1"
	st_rand 1 | st_mkfile -r "$dir" -d "$date" "/DISK_1/FILE_1A" -
	st_rand 1 | st_mkfile -r "$dir" -d "$date" "/DISK_1/FILE_1B" -
	st_rand 1 | st_mkfile -r "$dir" -d "$date" "/DISK_1/FILE_1C" -
	st_rand 1 | st_mkfile -r "$dir" -d "$date" "/DISK_2/FILE_2A" -
	touch -d "$date" "$dir/DISK_1" "$dir/DISK_2"
	# day 2
	local dir="$fsdir/d2" date=`st_fakedate -d2`
	st_sync "$fsdir/d1" "$dir"
	# day 3
	local dir="$fsdir/d3" date=`st_fakedate -d3`
	st_sync "$fsdir/d2" "$dir"
	# ok
	echo >$stage
	cd "$ST_RUNDIR"
	find -print0 | sort -z | xargs -0 ls -ldh --time-style='+%Y/%m/%d %H:%M:%S' >FILES.txt
	cd "$oldpwd"
}


# setup
#
test_base_setup()
{
	setup_fs

	st_mkfile "/etc/mybackup/test/mybackup.conf" - <<EOF
{
  "scripts": {
    "HOOK": {
      "prog": "./HOOK",
      "options": ["%(config)s", "%(disk)s", "%(orig)s", "%(path)s"]
    }
  },
  "disks": {
    "DISK_1": {
      "orig": "$ST_ROOTDIR/orig/DISK_1",
      "path": "$ST_ROOTDIR/fs/DISK_1",
      "hooks": [{
        "script": "HOOK",
        "triggers": "schedule",
        "options": ["extra", "args..."]
      }]
    },
    "DISK_2": {
      "orig": "",
      "path": "$ST_ROOTDIR/fs/DISK_2",
      "hooks": []
    }
  }
}
EOF

	st_mkfile -m755 "/etc/mybackup/test/HOOK" - <<EOF
#!/bin/sh
echo "HOOK: \$# ARGS:"
for A in \$@; do
  echo " - '\$A'"
done
echo "HOOK: ALL DONE!"
EOF

	test -d "$ST_ROOTDIR/fs" || st_mkdir /fs
}


# main
#
test_base_main()
{
	trace "MBDUMP: '$MBDUMP' (`which $MBDUMP`)"
	"$MBDUMP" --help >"$ST_ROOTDIR/tmp/mbdump-help.txt"
	
	# go
	for day in `seq 1 3`; do
		date=`st_fakedate -d$day -h1`
		title "DAY $day" 70
		st_sync "$ST_RUNDIR/fs/d$day" "$ST_ROOTDIR/fs"
		_MB_SYSTEST_DATE="$date" "$MBDUMP" test
		# just one time, make sure this does nothing
		test $day -ne 1 || {
			date=`st_fakedate -d$day -h2`;
			_MB_SYSTEST_DATE="$date" "$MBDUMP" test; }
	done
}
